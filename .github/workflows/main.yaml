#TODO: remove nx when not needed

### CICD runs on the following terms: 
### Dev environment - Pr to dev + Merge to dev
### Stage environment - Creating Release branch + Pr to release branch
### Prod environment - Pr approved to main
 
name: main_workflow
on:
  push:
    branches:
      - 'dev'
  # create:
  #   branches:
  #     - 'release/**'
  #   paths:
  #   - 'nx/apps/**'
  #   - 'nx/libs/**'
  #   - "nx/package.json"
  pull_request:
    branches:
    - 'main'
  #   - 'dev'
    types:
    - 'closed'
    - 'opened'
    - 'reopened'
    - 'synchronize'
  # pull_request_review:
  #   types: [submitted]
  #   branches:
  #   - 'main'

defaults:
  run:
    shell: bash

permissions:
  id-token: write
  contents: read     
  repository-projects: write 
  actions: write

jobs:
  # first: 
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Dump GitHub context
  #       env:
  #         GITHUB_CONTEXT: ${{ toJson(github) }}
  #       run: echo "$GITHUB_CONTEXT"
  #     - name: Dump job context
  #       env:
  #         JOB_CONTEXT: ${{ toJson(job) }}
  #       run: echo "$JOB_CONTEXT"
  #     - name: Dump steps context
  #       env:
  #         STEPS_CONTEXT: ${{ toJson(steps) }}
  #       run: echo "$STEPS_CONTEXT"
  #     - name: Dump runner context
  #       env:
  #         RUNNER_CONTEXT: ${{ toJson(runner) }}
  #       run: echo "$RUNNER_CONTEXT"
  #     - name: Dump strategy context
  #       env:
  #         STRATEGY_CONTEXT: ${{ toJson(strategy) }}
  #       run: echo "$STRATEGY_CONTEXT"
  #     - name: Dump matrix context
  #       env:
  #         MATRIX_CONTEXT: ${{ toJson(matrix) }}
  #       run: echo "$MATRIX_CONTEXT"
      # - name: Show default environment variables
      #   run: |
      #     echo "Review state ${{ github.event }}"
  #         echo "The job_id is: $GITHUB_JOB"   # reference the default environment variables
  #         echo "The id of this action is: $GITHUB_ACTION"   # reference the default environment variables
  #         echo "The run id is: $GITHUB_RUN_ID"
  #         echo "The GitHub Actor's username is: $GITHUB_ACTOR"
  #         echo "GitHub SHA: $GITHUB_SHA"
  Explore-GitHub-Actions:
    runs-on: ubuntu-latest
    steps:
      # - name: Integration Tests - All Envs    
      #   id: integration_test
      #   run: |
      #     echo $GITHUB_REF_NAME
      #   continue-on-error: true
      # - name: Set ENV specific variables
      #   id: crate-run-envs
      #   env:
      #     VER: "pr${{ github.event.number }}_${{ github.event.pull_request.title }}_${{ github.event.pull_request.head.sha }}"
      #   run: |
      #     echo $VER
      - name: Standard checkout - All Beside Merge To Dev
        uses: actions/checkout@v3
        with:
            ref: 'dev'
            token: ${{ secrets.MONOREPO_AUTH_TOKEN }}
      - name: test
        id: integration_test
        run: |
          echo test1 > ddd
          echo "surf_master=true" >> $GITHUB_OUTPUT
      - name: test1
        id: test1
        if: github.event.pull_request.merged && env.TARGET_ENV == 'prod' && github.event.review.user.login == 'eyalya'
        env:
          TARGET_ENV: prod
          SURF_MASTER: ${{ steps.integration_test.outputs.surf_master }}
        run: |
          echo $SURF_MASTER
      # - name: Commit changes
      #   uses: EndBug/add-and-commit@v9
      #   with:
      #     author_name: automation-chores
      #     author_email: automation-chores@ecoplant.co
      #     message: 'chore: bump version BLA'
      #     add: 'ddd'
      # - name: Push version - Merge To Dev
      #   uses: github-actions-x/commit@v2.9
      #   with:
      #     github-token: ${{ secrets.MONOREPO_AUTH_TOKEN }}
      #     push-branch: 'dev'
      #     commit-message: 'chore: bump version BLA'
      #     files: ddd
      #     name: automation-chores
      #     email: automation-chores@ecoplant.co
    # needs:
    #   - first
    # if: ${{ !github.event.pull_request.merged && github.event.review.state == 'approved' }} && ${{ github.event.review.user.login == 'eyal-midlink' || github.event.review.user.login == 'eyalya'}}
    # steps:
    #   - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."
    #   - run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!"
    #   - run: echo "🔎 The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
    #   - name: Check out repository code
    #     uses: actions/checkout@v3
    #   - run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner."
    #   - run: echo "🖥️ The workflow is now ready to test your code on the runner."
    #   - name: List files in the repository
    #     run: |
    #       ls ${{ github.workspace }}
    #   - run: echo "🍏 This job's status is ${{ job.status }}."
