name: set_variables
run-name: set_variables to ${{ inputs.environment }}

on:
  push: 
    branches:
    - '*'
  # pull_request:
  #   branches:
  #   - '*'
  #   types:
  #     - closed
  #     - synchronize
  #     - edited
          
jobs:
  set_variables:
    runs-on: ubuntu-latest
    outputs:
        bucket_name: ${{ steps.set_variables.outputs.bucket_name }}
        aws_region: ${{ steps.set_variables.outputs.aws_region }}
        destribution_id: ${{ steps.set_variables.outputs.destribution_id }}
        iam_role: ${{ steps.set_variables.outputs.iam_role }}
        env: ${{ steps.set_variables.outputs.env }}
        deployment: ${{ steps.set_variables.outputs.deployment }}
        list_apps: ${{ steps.set_variables.outputs.list_apps }}
    steps:
      - id: set_version
        run: |
          TIMESTAMP=$(date +"%Y-%m-%dT%H:%M:%S")
          TICKET_NUMBER=DEVOPS-001
          APP_VERSION="$TIMESTAMP|$TICKET_NUMBER"
          echo APP_VERSION=$APP_VERSION
          echo "APP_VERSION=$APP_VERSION" >> $GITHUB_OUTPUT
      - id: set_variables
        run: |
          set_output() {
            echo "bucket_name=${VARS[0]}"      >> $GITHUB_OUTPUT
            echo "aws_region=${VARS[1]}"       >> $GITHUB_OUTPUT
            echo "destribution_id=${VARS[2]}"  >> $GITHUB_OUTPUT
            echo "iam_role=${VARS[3]}"         >> $GITHUB_OUTPUT
            echo "env=${VARS[4]}"              >> $GITHUB_OUTPUT
            echo "deployment=${VARS[5]}"       >> $GITHUB_OUTPUT
            echo "list_apps=bsbs skss snns"    >> $GITHUB_OUTPUT
          }

          case dev in

          dev)
            export VARS=(ecoplant-front-end us-east-1 E1A8BNKY661F46 arn:aws:iam::173115710334:role/githubAdmin dev development)
            set_output
            ;;

          qa)
            export VARS=(ecoplant-front-end-qa us-east-1 E2PQ2J1MZOJJ3V arn:aws:iam::155580829344:role/githubAdmin qa qa)
            set_output
            ;;

          stage)
            export VARS=(ecoplant-front-end-stage us-east-2 E2D9HTTV0IC9AS arn:aws:iam::444611906471:role/githubAdmin stg staging)
            set_output
            ;;

          prod)
            export VARS=(ecoplant-front-end-prod us-east-1 E3KY2Q4LZRZ8QN arn:aws:iam::444611906471:role/githubAdmin prod production)
            set_output
            ;;

          *)
            echo "No environemt chosen"
            exit 1
            ;;
          esac
      - id: checkvar
        run: |
          if [[ ${{ github.event.pull_request.title }} =~ ^(APP-[0-9]+|EFS-[0-9]+|DEVOPS-[0-9]+) ]]; then
          TICKET_NUMBER="${BASH_REMATCH[1]}"
          echo Ticket is $TICKET_NUMBER
          echo "TICKET_NUMBER=$TICKET_NUMBER"   >> $GITHUB_OUTPUT
          else
            echo "PR source branch name does not start with ticket number"
            exit 1
          fi
          echo ${{ steps.set_variables.outputs.env }}
      - id: checklist
        run: |
          echo "nx -p ${{ steps.set_variables.outputs.list_apps }}"

  deploy:
      needs:
        - set_variables
      runs-on: ubuntu-latest
      steps:
      - id: checkvar
        run: |
          echo ${{ needs.set_variables.outputs.list_apps }}
